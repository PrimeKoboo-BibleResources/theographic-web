type Testament {
	title:String!
	divisions: [Division] @relation(name:"CONTAINS")
	books: [Book] @relation(name:"CONTAINS")
}

type Division {
	title: String!
	books: [Book] @relation(name:"CONTAINS")
}

type Book {
	id: String!
	bookOrder: Int
	osisRef: String!
	slug: String!
	title: String!
	shortName: String!
	division: [Division] @relation(name:"CONTAINS", direction:IN)
	chapters: [Chapter] @relation(name: "CONTAINS")
}

type Chapter {
	id: String!
	title: String!
	chapterNum: Int
	osisRef: String!
	slug: String!
	book: [Book] @relation(name: "CONTAINS", direction:IN)
	verses: [Verse] @relation(name: "CONTAINS")
	writer: [Person] @relation(name: "WROTE", direction:IN)
}

type Verse {
	id: String!
	osisRef: String!
	chapter: [Chapter] @relation(name:"CONTAINS", direction:IN)
	title: String!
	verseId: Int
	verseNum: Int
	verseText: String!
	people: [Person] @relation(name:"MENTIONS")
	places: [Place] @relation(name:"MENTIONS")
	eventDescribed: [Event] @relation(name:"DESCRIBES")
}

type Person {
	gender: String!
	name: String!
	description: String!
	personId: Int
	id: String!
	title: String!
	slug: String!
	status: String!
	verses: [Verse] @relation(name:"MENTIONS", direction:IN)
	birthYear: [Year] @relation(name:"BORN_IN")
	bithPlace: [Place] @relation(name:"BORN_IN")
	deathYear: [Year] @relation(name:"DIED_IN")
	deathPlace: [Place] @relation(name:"DIED_IN")
	memberOf: [PeopleGroup] @relation(name:"MEMBER_OF")
	writerOf: [Chapter] @relation(name:"WROTE")
	participantIn: [Event] @relation(name:"PARTICIPATED_IN")
	hasBeenTo: [Place] @relation(name:"HAS_BEEN_TO")
	parentOf: [Person] @relation(name:"PARENT_OF")
	childOf: [Person] @relation(name:"CHILD_OF")
	knows: [Person] @relation(name:"KNOWS")
}

type PeopleGroup {
	name: String!
	id: String!
	members: [Person] @relation(name:"MEMBER_OF", direction:IN)
}

type Place {
	id: String!
	placeId: Int
	name: String!
	latitude: Int
	longitude: Int
	precision: String!
	featureType: String!
	description: String!
	source: String!
	slug: String!
	status: String!
	comments: String!
	events: [Event] @relation(name:"OCCURRED_IN", direction:IN)
	peopleBorn: [Person] @relation(name:"BORN_IN", direction:IN)
	peopleDied: [Person] @relation(name:"DIED_IN", direction:IN)
	hasBeenHere: [Person] @relation(name:"HAS_BEEN_TO", direction:IN)
	verses: [Verse] @relation(name:"MENTIONS", direction:IN)
}

type Event {
 	id: String!
	title: String!
 	startDate: String!
 	precision: String!
 	duration: String!
 	sequence: Int,
 	yearsOccurred: [Year] @relation(name:"OCCURRED_IN")
 	participants: [Person] @relation(name:"PARTICIPATED_IN", direction:IN)
 	placeOccurred: [Place] @relation(name:"OCCURRED_IN")
 	eventGroup: [EventGroup] @relation(name:"INCLUDES", direction:IN)
 	verses: [Verse] @relation(name:"DESCRIBES", direction:IN)
}

type EventGroup {
	title: String!
	slug: String!
	events: [Event] @relation(name:"INCLUDES")
}

type Year {
	id: String!
	year: Int
	formattedYear: String!
	events: [Event] @relation(name:"OCCURRED_IN", direction:IN)
	peopleBorn: [Person] @relation(name:"BORN_IN", direction:IN)
	peopleDied: [Person] @relation(name:"DIED_IN", direction:IN)
}